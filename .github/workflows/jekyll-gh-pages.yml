# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Check if Git is available (to verify git command works)
      - name: Check Git version
        run: git --version

      # Step 3: Set up Ruby environment for Jekyll
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Set the desired Ruby version
          bundler-cache: true  # Caching Bundler dependencies to speed up workflow

      # Step 4: Install Jekyll and required dependencies
      - name: Install Jekyll and dependencies
        run: |
          gem install bundler
          bundle install  # Install all the Ruby dependencies for your Jekyll site

      # Step 5: Install Python dependencies for your conversion script
      - name: Install Python dependencies
        run: |
          python -m venv venv  # Create a virtual environment for Python dependencies
          source venv/bin/activate  # Activate the virtual environment
          pip install -r requirements.txt  # Install Python packages from requirements.txt

      # Step 6: Execute the Python conversion script
      - name: Execute conversion script
        run: |
          source venv/bin/activate  # Activate virtual environment before running script
          python scripts/convert_notebooks.py  # Run your Python script

      # Step 7: Build the Jekyll site
      - name: Build with Jekyll
        run: |
          bundle exec jekyll build  # Build the Jekyll site

      # Step 8: Upload the artifact (artifact for GitHub Pages deployment)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL of the deployed site
    runs-on: ubuntu-latest
    needs: build  # This job will run only after the 'build' job succeeds
    steps:
      # Step 1: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Action that deploys the site to GitHub Pages
